Is Unique
Implement an algorithm to determine if a string has all unique characters.
What if you cannot use additional data structures?

I: str;
O: bool;
C: no method;
Q: 
- what if argument is not a str? what to return?
- what if !str.length? what to return?
Plan:
- iterate through each char in a string;
- while iterating, store the char as a key in an object with val: 1 everytime it's found;
- if a key exists, then we found a duplication, return false;
- when we got to the end, returns true;
Runtime O(N), space O(1).

function isUnique(str) {
  if (!str || typeof str != 'string') return null;	//	  	  		  
  let check = {};					// 	  
  for (let i = 0; i < str.length; i++) {		//	  
      let el = str[i];					// 'a'	  'b'	   'c'		 'b'
    if (!check.hasOwnProperty(el)) {			// true	  true	   true		 false
      check[el] = 1;					// {a:1} {a:1,b:1} {a:1,b:1,c:1}   -
    }
    else if (check.hasOwnProperty(el)) return false;					  // true => s2 => false
  }
  return true;								    // s1 => true
}

let s1 = 'abc'
let s2 = 'abcb';

READ: Unicode & ASCII characters!